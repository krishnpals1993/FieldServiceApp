@model FieldServiceApp.Models.DashboardViewModel
@using Microsoft.AspNetCore.Http
@using Microsoft.Extensions.Options;
@using  Newtonsoft.Json;
@inject IOptions<Appsettings> Settings
@inject IHttpContextAccessor HttpContextAccessor
@{

    String RoleName = Convert.ToString(@HttpContextAccessor.HttpContext.Session.GetString("RoleName"));
    ViewData["Title"] = "Dashboard";
}

<div class="page-content container container-plus" id="calendar-page">
    <!-- page header -->
    <div class="d-lg-none page-header border-0 py-0">
        <h1 class="text-dark-m3 pb-0 mb-0 text-125">
            Dashboard
        </h1>

        <!-- page tools -->
        <div class="page-tools d-none">
            <div class="action-buttons text-nowrap">
                <a class="btn bgc-white btn-light-secondary mx-0" href="#" data-toggle="tooltip" title="Details">
                    <i class="fa fa-search-plus text-blue"></i>
                </a>
                <a class="btn bgc-white btn-light-secondary mx-0" href="#" data-toggle="tooltip" title="Print">
                    <i class="fa fa-print text-purple"></i>
                </a>
                <a class="btn bgc-white btn-light-secondary mx-0" href="#" data-toggle="tooltip" title="Remove">
                    <i class="fa fa-trash-alt text-danger"></i>
                </a>
            </div>
        </div>
    </div>

    @if (RoleName == "Admin")
    {

    }



    <div class="row">
        <div class="col-lg-12 pt-2">

            @*<div class="page-header border-0 mb-3">
                    <h1 class="page-title text-primary-d2 text-150">
                        Order(s)
                    </h1>
                </div>*@


            <!-- message to be displayed on touch devices -->
            <div id="alert-1" class="d-none alert bgc-white border-none border-l-4 brc-purple-m1 shadow-sm" role="alert">
                Touch a date slot and hold down to add a new event
            </div>



            <div class="row">
                <div class="col-12 col-md-10" id='calendar-container'>
                    <div class="card bcard">
                        <div class="card-body p-lg-4">
                            <div id='calendar' class="text-blue-d1"></div>
                        </div>
                    </div>
                </div>

                <div class="col-12 col-md-2 mt-2 mt-md-0" id='external-events'>
                    <div class="bgc-white shadow-sm p-35 radius-1">
                        <p class="text-120 text-primary-d2">
                            Order (Without Ship Date)
                        </p>

                        <p id="alert-2" class="alert bgc-grey-l4 border-none border-l-4 brc-purple-m1">
                            Drag and drop the following order to calender for setup ship date
                        </p>

                        <div id='external-events-listing'>
                            @foreach (var item in Model.OrderList.Where(w => w.ShipStartDate == null))
                            {

                                <div style="cursor:pointer" onclick="showOrderDetail(@item.OrderId)"
                                     class="fc-event badge bgc-blue-d1 text-white border-0 py-2 text-90 mb-1 radius-2px"
                                     data-class="bgc-blue-d1 text-white text-95">
                                    Order #<span>@item.OrderId</span> <br />
                                    @item.EmployeeName

                                </div>

                            }

                        </div>


                    </div>

                </div>



            </div>

            <div class="row" style="margin-top:15px">
                <div class="col-12 col-lg-12">
                    <div class="bcard card h-100">

                        <div class="card-body p-0">
                            <div>
                                <table id="datatable" class="d-style w-100 table text-dark-m1 text-95 border-y-1 brc-black-tp11 collapsed">
                                    <thead class="sticky-nav text-secondary-m1 text-uppercase text-85">
                                        <tr>
                                            <th class="border-0 bgc-white bgc-h-yellow-l3 shadow-sm">No</th>
                                            <th class="border-0 bgc-white bgc-h-yellow-l3 shadow-sm">Order Date</th>
                                            <th class="border-0 bgc-white bgc-h-yellow-l3 shadow-sm">Customer</th>
                                            <th class="border-0 bgc-white bgc-h-yellow-l3 shadow-sm">Ship Date</th>
                                            <th class="border-0 bgc-white bgc-h-yellow-l3 shadow-sm"> Amount($)</th>
                                            <th class="border-0 bgc-white bgc-h-yellow-l3 shadow-sm">Assigned To</th>
                                            @*<th class="border-0 bgc-white bgc-h-yellow-l3 shadow-sm">Status</th>*@
                                        </tr>
                                    </thead>

                                    <tbody>
                                        @foreach (var item in (Model.OrderList.Take(50)))
                                        {
                                            <tr class="bgc-h-secondary-l4 @(item.ScheduledOnNonWorkingDay?"nonWkDayOrder":"")">
                                                <td class="pl-2 pl-lg-4">
                                                    <a href="#" class="text-95 text-primary text-600">
                                                        #@item.OrderNo
                                                    </a>
                                                </td>

                                                <td class="text-dark-m2 text-85">@item.OrderDate.ToString("MM/dd/yyyy")</td>

                                                <td class=" text-dark-m2 text-85"> @item.CustomerName</td>

                                                <td class=" text-dark-m2 text-85">
                                                    @if (item.ShipStartDate != null)
                                                    {
                                                        <span>@item.ShipStartDate?.DayOfWeek , </span>
                                                    }
                                                    @item.ShipStartDate?.ToString("MM/dd/yyyy hh:mm tt")

                                                </td>

                                                <td class="font-bolder text-75 text-dark-m2 pr-2 pr-lg-3">
                                                    @item.TotalAmount
                                                </td>

                                                <td class="text-secondary-d3 text-95">
                                                    @item.EmployeeName

                                                </td>
                                                @*<td class="text-secondary-d3 text-95">
                                                        @item.Status

                                                    </td>*@
                                            </tr>
                                        }
                                        @if (Model.OrderList.Count() == 0)
                                        {
                                            <tr class="bgc-h-secondary-l4">
                                                <td class="pl-2 pl-lg-4" colspan="7">
                                                    No Order Assigned
                                                </td>
                                            </tr>

                                        }


                                    </tbody>
                                </table>
                            </div>
                        </div>

                    </div>
                </div>
            </div>


        </div>
    </div>

</div>
<button type="button" class="btn px-4 btn-info mb-1" onclick="openAddOrder()" style="display:none">
    Fullscreen
</button>
<button type="button" class="btn px-4 btn-info mb-1" id="mdlBtn" data-toggle="modal" data-target="#modalFullscreen" style="display:none">
    Fullscreen
</button>
<div class="modal fade modal-fs" id="modalFullscreen" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel2" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable" role="document">
        <div class="modal-content">

            <div class="modal-body holds-the-iframe">

                <iframe src="" style="overflow:hidden;
                        height:95%;width:100%"></iframe>

            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">
                    Close
                </button>

            </div>
        </div>
    </div>
</div>

@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib/fullcalendar/main.css" />
        <link rel="stylesheet" href="~/lib//datatable/dataTables.bootstrap4.css" />
        <link rel="stylesheet" href="~/lib//datatable/buttons.bootstrap4.css" />
        <link rel="stylesheet" href="~/lib/bootstrap-datepicker/bootstrap-datetimepicker.css" />
        <link rel="stylesheet" href="~/lib/bootstrap-datepicker/tiny-date-picker.css" />
        <link rel="stylesheet" href="~/lib/bootstrap-datepicker/date-range-picker.css" />
    </environment>
    <style>
        .topBar {
            display: block !important;
        }

        #calendar .extEvt {
            display: none !important;
        }

        #calendar .bgc-blue-d1 {
            display: none !important;
        }

        .nonWkDayOrder {
            background-color: #ffbc002b;
        }

        iframe #sidebar {
            display: none
        }

        iframe .navbar {
            display: none
        }

        .holds-the-iframe {
            background: url(@(Settings.Value.WebBaseURL)/images/25.gif) center center no-repeat;
        }
    </style>
}

@section scripts {
    <script type="text/javascript">
        window.roleName = '@RoleName';
    window.calenderHourId = '@Model.CalenderWorkingHour.Id';
    if (window.calenderHourId != '0') {
        {

                window.startTime = '@(Model.CalenderWorkingHour.StartTime != null ?Model.CalenderWorkingHour.StartTime.Value.ToString("HH:mm:ss") :"00:00:00") ';
                window.endTime = '@(Model.CalenderWorkingHour.EndTime != null ?Model.CalenderWorkingHour.EndTime.Value.ToString("HH:mm:ss") :"23:30:00") ';
          }
    }


        function openAddOrder(dt) {
            if ( window.roleName=='Admin') {
                 $("#mdlBtn").trigger('click');
            $('.modal-body').html('')
            $('.modal-body').append('<iframe src="/Order/AddModal/2020-12-02" style="overflow:hidden;height:95%;width:100%"></iframe>');

            $("iframe").attr('src','/Order/AddModal/'+dt);
            }


           
        }
         function openEditOrder(dt) {
             if (window.roleName == 'Admin') {
                 $("#dshbrdClose").trigger('click');
            $('.modal-body').html('')
            $('.modal-body').append('<iframe src="/Order/AddModal/2020-12-02" style="overflow:hidden;height:95%;width:100%"></iframe>');
            $("#mdlBtn").trigger('click');
            $("iframe").attr('src','/Order/EditModal/'+dt);
             }
             
        }


    </script>
    <environment names="Development,Staging,Production">
        <script src="~/lib//datatable/jquery.dataTables.js"></script>
        <script src="~/lib//datatable/dataTables.bootstrap4.js"></script>
        <script src="~/lib//datatable/dataTables.colReorder.js"></script>
        <script src="~/lib//datatable/dataTables.select.js"></script>
        <script src="~/lib//datatable/dataTables.buttons.js"></script>
        <script src="~/lib//datatable/buttons.bootstrap4.js"></script>
        <script src="~/lib//datatable/buttons.colVis.js"></script>
        <script src="~/lib//datatable/buttons.html5.js"></script>
        <script src="~/lib//datatable/buttons.print.js"></script>
        <script src="~/lib/moment/moment.js"></script>
        <script src="~/lib/fullcalendar/main.js"></script>
        <script src="~/lib/fullcalendar/tooltip.min.js"></script>
        <script src="~/js/Chart.js"></script>
        <script src="~/pages/dashboard/page-script.js"></script>
        <script src="~/pages/calendar/@@page-script.js"></script>
        <script src="~/pages/datatable/@@page-script.js"></script>
        <script src="~/lib/bootstrap-datepicker/bootstrap-datetimepicker.js"></script>
        <script src="~/lib/bootstrap-datepicker/date-range-picker.js"></script>
        <script src="~/lib/inputmask/jquery.inputmask.js"></script>
    </environment>
    <script type="text/javascript">
        window.orderList = '@Json.Serialize(Model.OrderList)';
        window.employeeList = '@Json.Serialize(Model.EmployeeList)';
        window.orderList = JSON.parse(window.orderList);
        window.employeeList = JSON.parse(window.employeeList);

        function getEvents() {
            var arr = [];
            for (var i = 0; i < window.orderList.length; i++) {
                if (window.orderList[i]['ShipStartDate'] != null) {

                for (var i = 0; i <  window.orderList.length; i++) {
                    arr.push({
                        id: window.orderList[i]['OrderId'],
                        resourceId: window.orderList[i]['EmployeeId'],
                        title: window.orderList[i]['CustomerShipAddress'] + '<br/>' + window.orderList[i]['ItemName'],
                        start: new Date(window.orderList[i]['ShipStartDate']),
                        end: window.orderList[i]['ShipEndDate'] == null ? null : new Date(window.orderList[i]['ShipEndDate']),
                        allDay: false,
                        extendedProps: window.orderList[i],
                         description: window.orderList[i]['ItemName'],
                        //backgroundColor:window.orderList[i]['Color'],
                        //eventColor: window.orderList[i]['Color'],
                        //eventTextColor:'black'
                        className: 'text-75 ',
                        color: window.orderList[i]['Color'],   // a non-ajax option
                         textColor: 'white'
                        //eventTextColor:(window.orderList[i]['ShipEndDate'] == null ? (window.orderList[i]['Color'] ? window.orderList[i]['Color']:'blue') :'white' )
                    });
            }
            }
            }
            window.calenderEvents = arr;
            return arr;

        }

        function getResource() {
            console.log(window.employeeList);
            var arr = [];
             var filterArray = [];
            for (var i = 0; i <  window.employeeList.length; i++) {
                {
                    arr.push(window.employeeList[i]['EmployeeId']);
                    filterArray.push(window.employeeList[i]);
                }
            }
            arr.push(0);

            arr = $.unique(arr);
            var resourceArray = [];
            for (var i = 0; i < arr.length; i++) {
                var empName = getEmloyeeName(filterArray, arr[i]);
                resourceArray.push({
                    id: arr[i],
                    title: arr[i].toString()=="0"? "Not Assigned":empName
                });

            }
            console.log(resourceArray);
            return resourceArray;

        }

        function getEmloyeeName(filterArray,id) {
            var name = "";
            for (var i = 0; i < filterArray.length; i++) {
                if (filterArray[i]["EmployeeId"] == id) {
                    name = filterArray[i]["FirstName"] +" "+filterArray[i]["LastName"];
                    break;
                }

            }
            return name;
        }

         function updateOrderAssignee(orderId,start,end,employeeId,callback) {
            var data = {
                'orderId': orderId,
                'start': (start==null ? null : new moment(start).format("MM/DD/YYYY HH:mm")) ,
                'end': (end==null ? null : new moment(end).format("MM/DD/YYYY HH:mm")),
                'employeeId': employeeId,
                'status' : "day"
            };
            console.log(data);
            $.ajax({
                url: "/Order/UpdateOrderDate",
                type: "POST",
                dataType: "json",
                data: data,
                success: function (data) {
                     callback(data)
                },
                error: function (data) {


                }
            })

        }

        function updateOrderDate(orderId,start,end,callback) {
            var data = {
                'orderId': orderId, 'start': (start==null ? null : new moment(start).format("MM/DD/YYYY HH:mm")) ,
                'end': (end==null ? null : new moment(end).format("MM/DD/YYYY HH:mm"))
            };
            console.log(data);
            $.ajax({
                url: "/Order/UpdateOrderDate",
                type: "POST",
                dataType: "json",
                data: data,
                success: function (data) {
                     callback(data)
                },
                error: function (data) {


                }
            })

        }


        function updateOrder(orderId) {

            var employeeId = $("#EmployeeId").val();

            if (!employeeId) {
                alert("Please select assignee");
                return;
            }


              var data = {
                  'orderId': orderId,
                   'employeeId': employeeId
                };
            console.log(data);

            $.ajax({
                url: "/Order/UpdateOrderAssignee",
                type: "POST",
                dataType: "json",
                data: data,
                success: function (data) {
                    window.assingEmployeeColor = data.Message;
                   $("#btnSumbit").trigger('click');
                }
            })
        }

        function showOrderDetail(id) {
             $.ajax({
                 url: "/Home/GetOrderPopup/" + id,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                success: function (response) {
                    var modal = response;
                    modal = $(modal).appendTo('body');
                    modal.find('form').on('submit', function (ev) {
                        ev.preventDefault();
                        //info.event.setProp('title', info.event._def.extendedProps.CustomerName + '<br />' + $("#EmployeeId option:selected").text());
                        window.location.reload();
                        modal.modal("hide");
                    });
                    modal.find('button[data-action=delete]').on('click', function () {
                        modal.modal("hide");
                    });
                    modal.modal('show').on('hidden.bs.modal', function () {
                        modal.remove();
                    });
                }
            });
        }

    </script>
}