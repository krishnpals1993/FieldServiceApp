@using Microsoft.Extensions.Options;
@using Newtonsoft.Json;
@model FieldServiceApp.Models.BilHeaderViewModel
@inject IOptions<Appsettings> Settings
@inject IOptions<Appsettings> Settings
@{
    ViewData["Title"] = "New Invoice";
    List<string> CompanyTypeList = new List<string>();
    CompanyTypeList.Add("Business");
    CompanyTypeList.Add("Residential");




}

<div role="main" class="page-content container container-plus">
    <div class="card bcard mt-2 mt-lg-3">
        <div class="card-header">
            <h3 class="card-title text-125">
                @ViewData["Title"]
            </h3>
        </div>

        <div class="card-body px-3 pb-1">
            <form class="mt-lg-3" autocomplete="off" novalidate action="@Settings.Value.WebBaseURL/Invoice/Add" method="post">
                <div class="form-group row">
                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                        <label for="id-form-field-1" class="mb-0">
                            Order No
                        </label>
                    </div>

                    <div class="col-sm-3">
                        <div class="input-group date">
                            @Html.TextBoxFor(m => m.OrderNo,
                            new { @placeholder = "Order No", min = "1", type = "number", @class = "form-control" })
                        </div>
                        <span asp-validation-for="OrderNo" class="text-danger"></span>
                    </div>
                    <div class="col-lg-2">
                        <button type="submit" onclick="searchOrder()"
                                class=" btn btn-outline-light btn-h-light-orange btn-a-light-orange border-b-2 text-600 px-3 mb-1">
                            Search
                            <i class="fa fa-search text-110 text-orange-d2 mr-1"></i>
                        </button>
                    </div>
                    <div class="col-lg-2" style="margin-left:-8%">
                        <button type="button" onclick="cancel()"
                                class=" btn btn-outline-light btn-h-light-orange btn-a-light-orange border-b-2 text-600 px-3 mb-1">
                            Cancel
                        </button>
                    </div>
                </div>

            </form>
        </div>
    </div>
</div>




@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib/bootstrap-datepicker/bootstrap-datetimepicker.css" />
        <link rel="stylesheet" href="~/lib/bootstrap-datepicker/tiny-date-picker.css" />
        <link rel="stylesheet" href="~/lib/bootstrap-datepicker/date-range-picker.css" />
        @*<link href="~/lib/chosen-js/chosen.css" rel="stylesheet" />*@
    </environment>
    <style>
        hr {
            /*margin-bottom: 2rem !important;*/
        }
    </style>
}

@section scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <environment names="Development,Staging,Production">
        <script src="~/lib/moment/moment.js"></script>
        <script src="~/lib/bootstrap-datepicker/bootstrap-datetimepicker.js"></script>
        <script src="~/lib/bootstrap-datepicker/date-range-picker.js"></script>
        <script src="~/pages/form-basic/@@page-script.js"></script>
        @*<script src="~/lib/chosen-js/chosen.jquery.js"></script>*@
    </environment>
    <script type="text/javascript">
        // Restricts input for each element in the set of matched elements to the given inputFilter.
        (function ($) {
            $.fn.inputFilter = function (inputFilter) {
                return this.on("input keydown keyup mousedown mouseup select contextmenu drop", function () {
                    if (inputFilter(this.value)) {
                        this.oldValue = this.value;
                        this.oldSelectionStart = this.selectionStart;
                        this.oldSelectionEnd = this.selectionEnd;
                    } else if (this.hasOwnProperty("oldValue")) {
                        this.value = this.oldValue;
                        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                    } else {
                        this.value = "";
                    }
                });
            };
        }(jQuery));
    </script>
    <script type="text/javascript">
        $(document).ready(function () {

            $("#OrderNo").val('');

             $("#OrderNo").inputFilter(function(value) {
                 return /^-?\d*[.,]?\d*$/.test(value);
             });

        var SuccessMessage = '@ViewBag.SuccessMessage';
            var ErrorMessage = '@ViewBag.ErrorMessage';

        if (ErrorMessage) {
            swal(ErrorMessage, "", "error");
            }
        });

        function cancel() {
             window.location.href = "@Settings.Value.WebBaseURL/Invoice/List";
        }

    </script>

}