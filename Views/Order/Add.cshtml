@using Microsoft.Extensions.Options;
@using Newtonsoft.Json;
@model FieldServiceApp.Models.OrderMasterViewModel
@inject IOptions<Appsettings> Settings
@inject IOptions<Appsettings> Settings
@{
    ViewData["Title"] = "New Order";
    List<string> CompanyTypeList = new List<string>();
    CompanyTypeList.Add("Business");
    CompanyTypeList.Add("Residential");

    List<string> CheckboxSelectionList = new List<string>();
    CheckboxSelectionList.Add("Yes");
    CheckboxSelectionList.Add("No");

    List<string> ReOccurenceList = new List<string>();
    ReOccurenceList.Add("Days");
    ReOccurenceList.Add("Weeks");
    ReOccurenceList.Add("Months");
    ReOccurenceList.Add("WeekDay");
    ReOccurenceList.Add("Month's Day");

    List<string> WeekDayList = new List<string>();
    WeekDayList.Add("Sunday");
    WeekDayList.Add("Monday");
    WeekDayList.Add("Tuesday");
    WeekDayList.Add("Wednesday");
    WeekDayList.Add("Thursday");
    WeekDayList.Add("Friday");
    WeekDayList.Add("Saturday");


}

<div role="main" class="page-content container container-plus">
    <form class="mt-lg-3" autocomplete="off" novalidate action="@Settings.Value.WebBaseURL/Order/Add" method="post">
        <div class="card bcard mt-2 mt-lg-3">

            <div class="card-header">
                <div class="card-title ">
                    <div class="row">
                        <div class="col-md-3">
                            <h3 class="text-125">
                                <h3 class="card-title text-125">
                                    @ViewData["Title"]
                                </h3>
                            </h3>
                        </div>
                        <div class="col-md-9 text-nowrap text-right">
                            <button class="btn btn-info btn-bold px-4" onclick="return checkNonWorkingDay();" type="button">
                                <i class="fa fa-check mr-1"></i>
                                Submit
                            </button>

                            <a href="~/Order/List" class="btn btn-outline-lightgrey btn-bold ml-2 px-4" type="reset">
                                <i class="fa fa-undo mr-1"></i>
                                Cancel
                            </a>
                        </div>
                    </div>

                </div>
            </div>

            <div class="card-body px-3 pb-1">

                <div class="form-group row">
                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                        <label for="id-form-field-1" class="mb-0">
                            Order No
                        </label>
                    </div>

                    <div class="col-sm-3">
                        <div class="input-group date">
                            @Html.TextBoxFor(m => m.OrderNo,
                            new { @placeholder = "Order No", min = "1", type = "number", @class = "form-control" })
                            <span asp-validation-for="OrderNo" class="text-danger"></span>
                        </div>

                    </div>
                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                        <label for="id-form-field-1" class="mb-0">
                            Follow-up Order
                        </label>
                    </div>

                    <div class="col-sm-3">
                        @Html.DropDownListFor(model => model.ParentOrderId, new SelectList(Model.OrderList.Select(x => new { Value = x.OrderId, Text = x.CustomerName }), "Value", "Text"), "Select Follow-up Order", new { @class = "form-control", @placeholder = "Select Company" })
                        <span asp-validation-for="ParentOrderId" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                        <label for="id-form-field-1" class="mb-0">
                            Order Date
                        </label>
                    </div>

                    <div class="col-sm-3">
                        <div class="input-group date">
                            @Html.TextBoxFor(m => m.OrderDate,
                            new { id = "id-date-1", @placeholder = "Order Date", @class = "form-control" })
                            <div class="input-group-addon input-group-append">
                                <div class="input-group-text">
                                    <i class="far fa-calendar"></i>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                        <label for="id-form-field-1" class="mb-0">
                            Customer
                        </label>
                    </div>

                    <div class="col-sm-3">
                        @Html.DropDownListFor(model => model.CustomerId, new SelectList(Model.CustomerList.Select(x => new { Value = x.CustmoerId, Text = x.CompanyName }), "Value", "Text"), "Select Customer", new { @class = "form-control chosen-select", @placeholder = "Select Company" })
                        <span asp-validation-for="CustomerId" class="text-danger"></span>
                    </div>
                    <div class="col-lg-2">
                        <button data-toggle="modal" data-target="#newCustomerModel" type="button"
                                class=" btn btn-outline-light btn-h-light-orange btn-a-light-orange border-b-2 text-600 px-3 mb-1">
                            Add New
                            <i class="fa fa-plus text-110 text-orange-d2 mr-1"></i>
                        </button>
                    </div>
                </div>

                <div class="form-group row">

                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                        <label for="id-form-field-1" class="mb-0">
                            Ship Date
                        </label>
                    </div>

                    <div class="col-sm-3">
                        <div class="input-group date" id="id-timepicker">
                            @Html.TextBoxFor(m => m.ShipStartDate,
                            new { @placeholder = "Ship Date", @class = "form-control" })

                            <div class="input-group-addon input-group-append">
                                <div class="input-group-text">
                                    <i class="far fa-clock"></i>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                        <label for="id-form-field-1" class="mb-0">
                            Ship Address
                        </label>
                    </div>

                    <div class="col-sm-3">
                        @Html.DropDownListFor(model => model.ShipId, new SelectList(Model.CustomerShipingAddressList.Select(x => new { Value = x.ShipId, Text = x.Address }), "Value", "Text"), "Select Ship Address", new { @class = "form-control chosen-select", @placeholder = "Select Ship Address" })
                        <span asp-validation-for="ShipId" class="text-danger"></span>
                    </div>

                    <div class="col-sm-2">
                        <button data-toggle="modal" data-target="#newCustomerShippingModel"
                                type="button"
                                class="btnAddShipping btn btn-outline-light btn-h-light-orange btn-a-light-orange border-b-2 text-600 px-3 mb-1">
                            Add New Address
                            <i class="fa fa-plus text-110 text-orange-d2 mr-1"></i>
                        </button>
                    </div>
                </div>
                <div class="form-group row" id="ApartmentIdPenal" style="display:none">
                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                        <label for="id-form-field-1" class="mb-0">
                            Apartment
                        </label>
                    </div>

                    <div class="col-sm-3">
                        @Html.DropDownListFor(model => model.ApartmentId, new SelectList(Model.ApartmentList.Select(x => new { Value = x.ApartmentId, Text = x.ApartmentNo }), "Value", "Text"),
                       "Select Apartment", new { @class = "form-control chosen-select", @multiple = "", @placeholder = "Select Apartment" })
                        <span asp-validation-for="ApartmentId" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group row">


                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                        <label for="id-form-field-1" class="mb-0">
                            Re-Occurence
                        </label>
                    </div>

                    <div class="col-sm-3">
                        @Html.DropDownListFor(model => model.ReOccurence, new SelectList(CheckboxSelectionList.Select(x => new { Value = x, Text = x }), "Value", "Text"), "Select", new { @class = "form-control", @placeholder = "Select" })
                        <span asp-validation-for="ReOccurence" class="text-danger"></span>
                    </div>

                </div>

                <div id="reOccurencePanel" style="display:none">


                    <div class="form-group row">
                        <div class="col-sm-2 col-form-label text-sm-right pr-0">
                            <label for="id-form-field-1" class="mb-0">
                                ReOccurence From
                            </label>
                        </div>
                        <div class="col-sm-3">
                            <div class="input-group date">
                                @Html.TextBoxFor(m => m.ReOccurenceStartDate,
                                new { id = "ReOccurenceStartDate", @placeholder = "ReOccurence Date From", @class = "form-control" })
                                <div class="input-group-addon input-group-append">
                                    <div class="input-group-text">
                                        <i class="far fa-calendar"></i>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="col-sm-2 col-form-label text-sm-right pr-0">
                            <label for="id-form-field-1" class="mb-0">
                                ReOccurence To
                            </label>
                        </div>
                        <div class="col-sm-3">
                            <div class="input-group date">
                                @Html.TextBoxFor(m => m.ReOccurenceEndDate,
                                 new { id = "ReOccurenceEndDate", @placeholder = "ReOccurence Date To", @class = "form-control" })
                                <div class="input-group-addon input-group-append">
                                    <div class="input-group-text">
                                        <i class="far fa-calendar"></i>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>


                    <div class="form-group row">

                        <div class="col-sm-2 col-form-label text-sm-right pr-0">
                            <label for="id-form-field-1" class="mb-0">
                                Re-Occurence In
                            </label>
                        </div>

                        <div class="col-sm-3">
                            @Html.TextBoxFor(m => m.ReOccurenceFrequency,
                               new
                                    {
                                        @placeholder = "Re-Occurence In",
                                        @class = "form-control",
                                        type = "number",
                                        min = "0"
                                    })
                            <span asp-validation-for="ReOccurenceFrequency" class="text-danger"></span>
                        </div>

                        <div class="col-sm-2">
                            @Html.DropDownListFor(model => model.ReOccurenceCycle, new SelectList(ReOccurenceList.Select(x => new { Value = x, Text = x }), "Value", "Text"), "Select", new { @class = "form-control", @placeholder = "Select" })
                            <span asp-validation-for="ReOccurenceCycle" class="text-danger"></span>
                        </div>

                        <div class="col-sm-2" id="weekdayPanel" style="display:none">
                            @Html.DropDownListFor(model => model.ReOccurenceWeekday, new SelectList(WeekDayList.Select(x => new { Value = x, Text = x }), "Value", "Text"), "Select", new { @class = "form-control", @placeholder = "Select" })
                            <span asp-validation-for="ReOccurenceWeekday" class="text-danger"></span>
                        </div>


                    </div>



                </div>

                <h3 class="card-title text-125">
                    Item detail
                </h3>
                <hr />
                <div id="itemPanel">
                    @for (int i = 0; i < Model.OrderItemList.Count(); i++)
                    {
                        <div class="form-group row" style="margin-bottom:0px">
                            <div class="col-sm-2 col-form-label text-sm-left pr-0">
                                <label for="id-form-field-1" class="mb-0">
                                    <span>@(i + 1).</span> Item
                                </label>
                            </div>
                            <div class="col-sm-2 col-form-label text-sm-left pr-0">
                                <label for="id-form-field-1" class="mb-0">
                                    Price
                                </label>
                            </div>
                            <div class="col-sm-2 col-form-label text-sm-left pr-0">
                                <label for="id-form-field-1" class="mb-0">
                                    Quantity
                                </label>
                            </div>
                            <div class="col-sm-2 col-form-label text-sm-left pr-0">
                                <label for="id-form-field-1" class="mb-0">
                                    Total Price
                                </label>
                            </div>
                            <div class="col-sm-2 col-form-label text-sm-left pr-0">
                                <label for="id-form-field-1" class="mb-0">
                                    Description
                                </label>
                            </div>


                        </div>
                        <div class="form-group row">

                            <div class="col-sm-2">
                                @Html.DropDownListFor(model => model.OrderItemList[i].ItemId, new SelectList(Model.ItemList.Select(x => new { Value = x.ItemId, Text = x.ItemCd }), "Value", "Text"), "Select Item", new { @class = "form-control ItemId", @placeholder = "Select Item" })
                                <span asp-validation-for="OrderItemList[i].ItemId" class="text-danger"></span>
                            </div>


                            <div class="col-sm-2">
                                @Html.TextBoxFor(m => m.OrderItemList[i].PerUnitPrice,
                                   new { @placeholder = "Price", @class = "form-control PerUnitPrice", @readonly = "@readonly" })
                                <span asp-validation-for="OrderItemList[i].PerUnitPrice" class="text-danger"></span>
                            </div>


                            <div class="col-sm-2">
                                @Html.TextBoxFor(m => m.OrderItemList[i].Quantity,
                                 new { @placeholder = "Quantity", @class = "form-control Quantity" })
                                <span asp-validation-for="OrderItemList[i].Quantity" class="text-danger"></span>
                            </div>

                            <div class="col-sm-2">
                                @Html.TextBoxFor(m => m.OrderItemList[i].TotalPrice,
                               new { @placeholder = "Total Price", @class = "form-control TotalPrice", @readonly = "@readonly" })
                                <span asp-validation-for="OrderItemList[i].TotalPrice" class="text-danger"></span>
                                @*<a href="#" class="btn btn-link text-primary-d1">Add More</a>*@
                            </div>
                            <div class="col-sm-3">
                                @Html.TextBoxFor(m => m.OrderItemList[i].Description,
                                 new { @placeholder = "Description", @class = "form-control Description", @readonly = "@readonly" })
                                <span asp-validation-for="OrderItemList[i].Description" class="text-danger"></span>
                            </div>
                            <div class="col-lg-1" style="width:30px" >
                                <button onclick="addItems('@i')" type="button"
                                        class="btnAdd btn btn-outline-light btn-h-light-orange btn-a-light-orange border-b-2 text-600 px-2 mb-1">
                                    <i class="fa fa-plus text-110 text-orange-d2 mr-1"></i>
                                </button>
                            </div>
                        </div>
                    }
                </div>



                <hr />
                <div class="form-group row">
                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                        <label for="id-form-field-1" class="mb-0">
                            Assigned To
                        </label>
                    </div>

                    <div class="col-sm-3">
                        @Html.DropDownListFor(model => model.AssigneeId,
                       new SelectList(Model.EmployeeList.Select(x => new { Value = x.EmployeeId, Text = x.FirstName + " " + x.LastName }), "Value", "Text"),
                       "Select Employee", new { @class = "form-control", @placeholder = "Select Employee" })
                        <span asp-validation-for="AssigneeId" class="text-danger"></span>
                    </div>



                </div>

                <div class="form-group row">
                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                        <label for="id-form-field-1" class="mb-0">
                            Total Amount
                        </label>
                    </div>

                    <div class="col-sm-3">
                        @Html.TextBoxFor(m => m.TotalAmount,
                       new { @placeholder = "Total Amount", @class = "form-control", @readonly = "@readonly" })
                        <span asp-validation-for="TotalAmount" class="text-danger"></span>
                    </div>
                </div>



                <div class="mt-5 border-t-1 brc-secondary-l2 py-35 mx-n25">
                    <div class="offset-md-3 col-md-9 text-nowrap">
                        <button class="btn btn-info btn-bold px-4" type="submit" style="display:none" id="mainSubmit">
                            <i class="fa fa-check mr-1"></i>
                            Submit
                        </button>
                        <button class="btn btn-info btn-bold px-4" onclick="return checkNonWorkingDay();" type="button">
                            <i class="fa fa-check mr-1"></i>
                            Submit
                        </button>

                        <a href="~/Order/List" class="btn btn-outline-lightgrey btn-bold ml-2 px-4" type="reset">
                            <i class="fa fa-undo mr-1"></i>
                            Cancel
                        </a>
                    </div>
                </div>

            </div>
        </div>

    </form>

    <div class="modal fade modal-lg" id="newCustomerModel" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog " role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-primary-d3" id="exampleModalLabel">
                        New Customer
                    </h5>

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">

                    <form class="mt-lg-3" autocomplete="off" action="@Settings.Value.WebBaseURL/Order/AddNewCustomer" method="post">
                        <div class="form-group row">

                            <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                <label for="id-form-field-1" class="mb-0">
                                    Company Code
                                </label>
                            </div>

                            <div class="col-sm-3">
                                @Html.TextBoxFor(m => m.CustomerDetail.Code,
                                new { @placeholder = "Code", @class = "form-control" })
                                <span asp-validation-for="CustomerDetail.Code" class="text-danger"></span>
                            </div>

                            <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                <label for="id-form-field-1" class="mb-0">
                                    Company Name
                                </label>
                            </div>

                            <div class="col-sm-3">
                                @Html.TextBoxFor(m => m.CustomerDetail.CompanyName,
                                new { @placeholder = "Company Name", @class = "form-control" })
                                <span asp-validation-for="CustomerDetail.CompanyName" class="text-danger"></span>
                            </div>

                        </div>
                        <div class="form-group row">
                            <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                <label for="id-form-field-1" class="mb-0">
                                    Company Type
                                </label>
                            </div>

                            <div class="col-sm-3">
                                @Html.DropDownListFor(model => model.CustomerDetail.CompanyType, new SelectList(CompanyTypeList.Select(x => new { Value = x, Text = x }), "Value", "Text"), "Select", new { @class = "form-control", @placeholder = "Select company type" })
                            </div>
                            <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                <label for="id-form-field-1" class="mb-0">
                                    State
                                </label>
                            </div>

                            <div class="col-sm-3">
                                @Html.DropDownListFor(model => model.CustomerDetail.StateId, new SelectList(Model.CustomerDetail.StateList.Select(x => new { Value = x.StateId, Text = x.StateName }), "Value", "Text"), "Select state", new { @class = "form-control", @placeholder = "Select State" })
                                <span asp-validation-for="CustomerDetail.StateId" class="text-danger"></span>
                            </div>

                        </div>
                        <div class="form-group row">


                            <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                <label for="id-form-field-1" class="mb-0">
                                    City
                                </label>
                            </div>

                            <div class="col-sm-3">
                                @Html.DropDownListFor(model => model.CustomerDetail.CityId, new SelectList(Model.CustomerDetail.CityList.Select(x => new { Value = x.CityId, Text = x.CityName }), "Value", "Text"), "Select city", new { @class = "form-control", @placeholder = "Select city" })
                                <span asp-validation-for="CustomerDetail.CityId" class="text-danger"></span>
                            </div>

                            <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                <label for="id-form-field-1" class="mb-0">
                                    Address
                                </label>
                            </div>

                            <div class="col-sm-3">
                                @Html.TextBoxFor(m => m.CustomerDetail.Address,
                                new { @placeholder = "Address", @class = "form-control" })
                                <span asp-validation-for="CustomerDetail.Address" class="text-danger"></span>
                            </div>


                        </div>
                        <div class="form-group row">
                            <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                <label for="id-form-field-1" class="mb-0">
                                    Zip 1
                                </label>
                            </div>

                            <div class="col-sm-3">
                                @Html.TextBoxFor(m => m.CustomerDetail.Zip1,
                                new { @placeholder = "Zip 1", @class = "form-control" })
                                <span asp-validation-for="CustomerDetail.Zip1" class="text-danger"></span>
                            </div>


                            <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                <label for="id-form-field-1" class="mb-0">
                                    Zip 2
                                </label>
                            </div>

                            <div class="col-sm-3">
                                @Html.TextBoxFor(m => m.CustomerDetail.Zip2,
                                new { @placeholder = "Zip 2", @class = "form-control" })
                                <span asp-validation-for="CustomerDetail.Zip2" class="text-danger"></span>
                            </div>


                        </div>


                        <h3 class="card-title text-125">
                            Contact detail
                        </h3>
                        <hr />
                        <div id="contactPanel">
                            @for (int i = 0; i < Model.CustomerDetail.Contacts.Count(); i++)
                            {

                                <div class="form-group row">



                                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                        <label for="id-form-field-1" class="mb-0">
                                            First Name
                                        </label>
                                    </div>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(m => m.CustomerDetail.Contacts[i].FirstName,
                                        new { @placeholder = "First Name", @class = "form-control" })
                                        <span asp-validation-for="CustomerDetail.Contacts[i].FirstName" class="text-danger"></span>
                                    </div>

                                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                        <label for="id-form-field-1" class="mb-0">
                                            Middle Name
                                        </label>
                                    </div>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(m => m.CustomerDetail.Contacts[i].MiddleName,
                                           new { @placeholder = "Middle Name", @class = "form-control" })
                                        <span asp-validation-for="CustomerDetail.Contacts[i].MiddleName" class="text-danger"></span>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                        <label for="id-form-field-1" class="mb-0">
                                            Last Name
                                        </label>
                                    </div>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(m => m.CustomerDetail.Contacts[i].LastName,
                                          new { @placeholder = "Last Name", @class = "form-control" })
                                        <span asp-validation-for="CustomerDetail.Contacts[i].MiddleName" class="text-danger"></span>
                                    </div>
                                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                        <label for="id-form-field-1" class="mb-0">
                                            Email
                                        </label>
                                    </div>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(m => m.CustomerDetail.Contacts[i].Email,
                                          new { @placeholder = "Email", @class = "form-control" })
                                        <span asp-validation-for="CustomerDetail.Contacts[i].Email" class="text-danger"></span>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                        <label for="id-form-field-1" class="mb-0">
                                            Phone
                                        </label>
                                    </div>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(m => m.CustomerDetail.Contacts[i].Phone,
                                          new { @placeholder = "Phone", @class = "form-control" })
                                        <span asp-validation-for="CustomerDetail.Contacts[i].Phone" class="text-danger"></span>
                                    </div>
                                    @*<div class="col-lg-2">
                                            <button onclick="addContacts()" type="button"
                                                    class="btnAddContact btn btn-outline-light btn-h-light-orange btn-a-light-orange border-b-2 text-600 px-3 mb-1">
                                                Add
                                                <i class="fa fa-plus text-110 text-orange-d2 mr-1"></i>
                                            </button>
                                        </div>*@
                                </div>

                                <hr />
                            }
                        </div>




                        <h3 class="card-title text-125">
                            Shipping detail
                        </h3>
                        <hr />
                        <div id="shippingPanel">

                            @for (int i = 0; i < Model.CustomerDetail.Shippings.Count(); i++)
                            {
                                <div class="form-group row">

                                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                        <label for="id-form-field-1" class="mb-0">
                                            First Name
                                        </label>
                                    </div>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(m => m.CustomerDetail.Shippings[i].FirstName,
                                        new { @placeholder = "First Name", @class = "form-control" })
                                        <span asp-validation-for="CustomerDetail.Shippings[i].FirstName" class="text-danger"></span>
                                    </div>

                                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                        <label for="id-form-field-1" class="mb-0">
                                            Middle Name
                                        </label>
                                    </div>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(m => m.CustomerDetail.Shippings[i].MiddleName,
                                           new { @placeholder = "Middle Name", @class = "form-control" })
                                        <span asp-validation-for="CustomerDetail.Shippings[i].MiddleName" class="text-danger"></span>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                        <label for="id-form-field-1" class="mb-0">
                                            Last Name
                                        </label>
                                    </div>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(m => m.CustomerDetail.Shippings[i].LastName,
                                          new { @placeholder = "Last Name", @class = "form-control" })
                                        <span asp-validation-for="CustomerDetail.Shippings[i].MiddleName" class="text-danger"></span>
                                    </div>
                                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                        <label for="id-form-field-1" class="mb-0">
                                            Email
                                        </label>
                                    </div>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(m => m.CustomerDetail.Shippings[i].Email,
                                          new { @placeholder = "Email", @class = "form-control" })
                                        <span asp-validation-for="CustomerDetail.Shippings[i].Email" class="text-danger"></span>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                        <label for="id-form-field-1" class="mb-0">
                                            Phone
                                        </label>
                                    </div>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(m => m.CustomerDetail.Shippings[i].Phone,
                                          new { @placeholder = "Phone", @class = "form-control" })
                                        <span asp-validation-for="CustomerDetail.Shippings[i].Phone" class="text-danger"></span>
                                    </div>
                                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                        <label for="id-form-field-1" class="mb-0">
                                            State
                                        </label>
                                    </div>

                                    <div class="col-sm-3">
                                        @Html.DropDownListFor(model => model.CustomerDetail.Shippings[i].StateId, new SelectList(Model.CustomerDetail.StateList.Select(x => new { Value = x.StateId, Text = x.StateName }), "Value", "Text"), "Select state", new { @class = "form-control", @placeholder = "Select State" })
                                        <span asp-validation-for="CustomerDetail.Shippings[i].StateId" class="text-danger"></span>
                                    </div>

                                </div>

                                <div class="form-group row">


                                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                        <label for="id-form-field-1" class="mb-0">
                                            City
                                        </label>
                                    </div>

                                    <div class="col-sm-3">
                                        @Html.DropDownListFor(model => model.CustomerDetail.Shippings[i].CityId, new SelectList(Model.CustomerDetail.CityList.Select(x => new { Value = x.CityId, Text = x.CityName }), "Value", "Text"), "Select city", new { @class = "form-control", @placeholder = "Select city" })
                                        <span asp-validation-for="CustomerDetail.Shippings[i].CityId" class="text-danger"></span>
                                    </div>

                                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                        <label for="id-form-field-1" class="mb-0">
                                            Address
                                        </label>
                                    </div>

                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(m => m.CustomerDetail.Shippings[i].Address,
                                        new { @placeholder = "Address", @class = "form-control" })
                                        <span asp-validation-for="CustomerDetail.Shippings[i].Address" class="text-danger"></span>
                                    </div>
                                </div>

                                <hr />
                            }

                        </div>




                        <div class="mt-5 border-t-1 brc-secondary-l2 py-35 mx-n25">
                            <div class="offset-md-3 col-md-9 text-nowrap">
                                <button class="btn btn-info btn-bold px-4" type="submit">
                                    <i class="fa fa-check mr-1"></i>
                                    Submit
                                </button>


                                <a data-dismiss="modal" aria-label="Close" class="btn btn-outline-lightgrey btn-bold ml-2 px-4">
                                    <i class="fa fa-undo mr-1"></i>
                                    Cancel
                                </a>
                            </div>
                        </div>
                    </form>

                </div>


            </div>
        </div>
    </div>

    <div class="modal fade modal-lg" id="newCustomerShippingModel" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog " role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-primary-d3" id="exampleModalLabel">
                        New Shipping Address
                    </h5>

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">

                    <form class="mt-lg-3" autocomplete="off" method="post">
                        <div id="shippingPanel">


                            <div class="form-group row">

                                <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                    <label for="id-form-field-1" class="mb-0">
                                        First Name
                                    </label>
                                </div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(m => m.CustomerShippingDetail.FirstName,
                                    new { @placeholder = "First Name", @class = "form-control" })
                                    <span asp-validation-for="CustomerShippingDetail.FirstName" class="text-danger"></span>
                                </div>

                                <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                    <label for="id-form-field-1" class="mb-0">
                                        Middle Name
                                    </label>
                                </div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(m => m.CustomerShippingDetail.MiddleName,
                                       new { @placeholder = "Middle Name", @class = "form-control" })
                                    <span asp-validation-for="CustomerShippingDetail.MiddleName" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="form-group row">
                                <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                    <label for="id-form-field-1" class="mb-0">
                                        Last Name
                                    </label>
                                </div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(m => m.CustomerShippingDetail.LastName,
                                      new { @placeholder = "Last Name", @class = "form-control" })
                                    <span asp-validation-for="CustomerShippingDetail.MiddleName" class="text-danger"></span>
                                </div>
                                <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                    <label for="id-form-field-1" class="mb-0">
                                        Email
                                    </label>
                                </div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(m => m.CustomerShippingDetail.Email,
                                      new { @placeholder = "Email", @class = "form-control" })
                                    <span asp-validation-for="CustomerShippingDetail.Email" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="form-group row">
                                <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                    <label for="id-form-field-1" class="mb-0">
                                        Phone
                                    </label>
                                </div>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(m => m.CustomerShippingDetail.Phone,
                                      new { @placeholder = "Phone", @class = "form-control" })
                                    <span asp-validation-for="CustomerShippingDetail.Phone" class="text-danger"></span>
                                </div>
                                <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                    <label for="id-form-field-1" class="mb-0">
                                        State
                                    </label>
                                </div>

                                <div class="col-sm-3">
                                    @Html.DropDownListFor(model => model.CustomerShippingDetail.StateId, new SelectList(Model.CustomerDetail.StateList.Select(x => new { Value = x.StateId, Text = x.StateName }), "Value", "Text"), "Select state", new { @class = "form-control", @placeholder = "Select State" })
                                    <span asp-validation-for="CustomerShippingDetail.StateId" class="text-danger"></span>
                                </div>

                            </div>

                            <div class="form-group row">


                                <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                    <label for="id-form-field-1" class="mb-0">
                                        City
                                    </label>
                                </div>

                                <div class="col-sm-3">
                                    @Html.DropDownListFor(model => model.CustomerShippingDetail.CityId, new SelectList(Model.CustomerDetail.CityList.Select(x => new { Value = x.CityId, Text = x.CityName }), "Value", "Text"), "Select city", new { @class = "form-control", @placeholder = "Select city" })
                                    <span asp-validation-for="CustomerShippingDetail.CityId" class="text-danger"></span>
                                </div>

                                <div class="col-sm-2 col-form-label text-sm-right pr-0">
                                    <label for="id-form-field-1" class="mb-0">
                                        Address
                                    </label>
                                </div>

                                <div class="col-sm-3">
                                    @Html.TextBoxFor(m => m.CustomerShippingDetail.Address,
                                    new { @placeholder = "Address", @class = "form-control" })
                                    <span asp-validation-for="CustomerShippingDetail.Address" class="text-danger"></span>
                                </div>
                            </div>

                            <hr />


                        </div>




                        <div class="mt-5 border-t-1 brc-secondary-l2 py-35 mx-n25">
                            <div class="offset-md-3 col-md-9 text-nowrap">
                                <button class="btn btn-info btn-bold px-4" onclick="addNewShipping()" type="button">
                                    <i class="fa fa-check mr-1"></i>
                                    Submit
                                </button>

                                <a data-dismiss="modal" id="btnCloseShipping" aria-label="Close" class="btn btn-outline-lightgrey btn-bold ml-2 px-4">
                                    <i class="fa fa-undo mr-1"></i>
                                    Cancel
                                </a>
                            </div>
                        </div>
                    </form>

                </div>


            </div>
        </div>
    </div>




</div>




@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib/bootstrap-datepicker/bootstrap-datetimepicker.css" />
        <link rel="stylesheet" href="~/lib/bootstrap-datepicker/tiny-date-picker.css" />
        <link rel="stylesheet" href="~/lib/bootstrap-datepicker/date-range-picker.css" />
        <link href="~/lib/chosen-js/chosen.css" rel="stylesheet" />
    </environment>
    <style>
        hr {
            /*margin-bottom: 2rem !important;*/
        }
    </style>
}

@section scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <environment names="Development,Staging,Production">
        <script src="~/lib/moment/moment.js"></script>
        <script src="~/lib/bootstrap-datepicker/bootstrap-datetimepicker.js"></script>
        <script src="~/lib/bootstrap-datepicker/date-range-picker.js"></script>
        <script src="~/pages/form-basic/@@page-script.js"></script>
        <script src="~/lib/chosen-js/chosen.jquery.js"></script>
    </environment>
    <script type="text/javascript">
        // Restricts input for each element in the set of matched elements to the given inputFilter.
        (function ($) {
            $.fn.inputFilter = function (inputFilter) {
                return this.on("input keydown keyup mousedown mouseup select contextmenu drop", function () {
                    if (inputFilter(this.value)) {
                        this.oldValue = this.value;
                        this.oldSelectionStart = this.selectionStart;
                        this.oldSelectionEnd = this.selectionEnd;
                    } else if (this.hasOwnProperty("oldValue")) {
                        this.value = this.oldValue;
                        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                    } else {
                        this.value = "";
                    }
                });
            };
        }(jQuery));
    </script>
    <script type="text/javascript">
        $(document).ready(function () {

              var TinyDatePicker3 = DateRangePicker.TinyDatePicker;
                           TinyDatePicker3('#ReOccurenceStartDate', {
                            mode: 'dp-below',
                            date : new Date()
                        })
                           .on('statechange', function (ev) {

                            });

             var TinyDatePicker4 = DateRangePicker.TinyDatePicker;
                          TinyDatePicker4('#ReOccurenceEndDate', {
                             mode: 'dp-below',
                             date : new Date()
                         })
                          .on('statechange', function (ev) {

                             });

            $(".chosen-select").chosen({ allow_single_deselect: true, width: '100%' })

            $("#CustomerId").trigger("change");

             $("#OrderNo").inputFilter(function(value) {
                 return /^-?\d*[.,]?\d*$/.test(value);
             });

            $(".btnAddShipping").hide();

            if ($("#CustomerId").val()) {

                $("#CustomerId").trigger("change");
            }

            setTimeout(function () {
                $("input").each(function (index, element) {
                    if ($(element).prop('id') !='OrderNo') {
                        $(element).val('');
                    }


                });
                  $("#id-date-1").val(new moment().format("MM/DD/YYYY"));
            }, 0);

            window.itemList = '@Json.Serialize(Model.ItemList)';
            window.itemList = JSON.parse(itemList);
            console.log(window.itemList);
        var SuccessMessage = '@ViewBag.SuccessMessage';
        var ErrorMessage = '@ViewBag.ErrorMessage';
        if (SuccessMessage) {
            swal(SuccessMessage, "", "success");
           setTimeout(function () { window.location.href = "@Settings.Value.WebBaseURL/Order/Add"; }, 500);

        }
        if (ErrorMessage) {
            swal(ErrorMessage, "", "error");
        }




        });

         $(".ItemId").on("change", function () {
                console.log('event');
                if ($(this).val()) {
                    var price = getItemPrice($(this).val());
                     var description = getItemDescription($(this).val());
                    $(this).parent().parent().find(".PerUnitPrice").val(price);
                    $(this).parent().parent().find(".Description").val(description);
                  if ($(this).parent().parent().find(".Quantity").val()) {
                  var quantity = Number($(this).parent().parent().find(".Quantity").val());
                  var perUnitPrice = Number($(this).parent().parent().find(".PerUnitPrice").val());
                  $(this).parent().parent().find(".TotalPrice").val(quantity * perUnitPrice);
                      if ($("#TotalAmount").val()) {
                         // $("#TotalAmount").val(Number($("#TotalAmount").val())+ quantity * perUnitPrice);
                      }

              }
              else {
                  $(this).parent().parent().find(".TotalPrice").val('');
                 // $("#TotalAmount").val('');
              }
              }
              else {
                  $(this).parent().parent().find(".PerUnitPrice").val('');
                    $(this).parent().parent().find(".Description").val('');
                }

                setTotalAmount();

          });

         $(".Quantity").on("change", function () {
              if ($(this).val()) {
                  var quantity = Number($(this).val());
                  var perUnitPrice = Number($(this).parent().parent().find(".PerUnitPrice").val());
                  $(this).parent().parent().find(".TotalPrice").val(quantity * perUnitPrice);
                  //$("#TotalAmount").val(quantity * perUnitPrice);
              }
              else {
                  $(this).parent().parent().find(".TotalPrice").val('');

              }

                setTotalAmount();
          });

        function setTotalAmount() {
            // $("#TotalAmount").val('');
            var total = 0;
            $("#itemPanel .TotalPrice").each(function (index, item) {
                if ($(item).val()) {
                    total = total + Number($(item).val());
                }

            });
            $("#TotalAmount").val(total)
        }

        function getItemPrice(itemId) {
            var price = 0;
            for (var i = 0; i <  window.itemList.length; i++) {
                if (window.itemList[i]["ItemId"].toString()== itemId) {
                    price = window.itemList[i]["ItemPrice"];
                    i = window.itemList.length;
                    break;
                }
            }
            return price;
        }

        function getItemDescription(itemId) {
            var description = 0;
            for (var i = 0; i <  window.itemList.length; i++) {
                if (window.itemList[i]["ItemId"].toString()== itemId) {
                    description = window.itemList[i]["ItemDescription"];
                    i = window.itemList.length;
                    break;
                }
            }
            return description;
        }


        $("#CustomerId").on("change", function () {
            $("#ShipId").html('');
             $('#ApartmentId').empty(); //remove all child nodes
            $('#ApartmentId').trigger("chosen:updated");
            $("#ApartmentIdPenal").hide();

             var data = {
                'CustomerId':  $("#CustomerId").val(),
            };

            if ($("#CustomerId").val()) {
                $(".btnAddShipping").show();
            } else {
                $(".btnAddShipping").hide();
            }

            console.log(data);
            $.ajax({
                url: "/Order/GetCustomerShippingAddress",
                type: "POST",
                dataType: "json",
                data: data,
                success: function (response) {

                   if (response.length > 0) {
                $('#ShipId').html('');
                       var options = '';
                      
                options += '<option value="">Select Ship Address</option>';
                       for (var i = 0; i < response.length; i++) {
                           
                    options += '<option cust="' + response[i]['CustmoerId'] + '" value="' + response[i]['ShipId'] + '">' + response[i]['Address'] + '</option>';
                       }
                      
                       $('#ShipId').append(options);
                       $('#ShipId').trigger("chosen:updated");
                       
            }
                }
            })
        });

        $("#ShipId").on("change", function () {
            $("#ApartmentId").html('');
             var data = {
                'ShipId':  $("#ShipId").val(),
            };

            if ($("#ShipId").val()) {
                $("#ApartmentIdPenal").show();
            } else {
                $("#ApartmentIdPenal").hide();
            }

            console.log(data);
            $.ajax({
                url: "/Order/GetCustomerShippingApartment",
                type: "POST",
                dataType: "json",
                data: data,
                success: function (response) {

                 {
                $('#ApartmentId').html('');
                var options = '';
                //options += '<option value="">Select Apartment Address</option>';
                for (var i = 0; i < response.length; i++) {
                    options += '<option value="' + response[i]['ApartmentId'] + '">' + response[i]['ApartmentNo'] + '</option>';
                }

                        if (!$("#CustomerId").val()) {
                            var customerId = $($($("#ShipId option:selected"))[0]).attr("cust");

                            $("#CustomerId").val(customerId);
                            $('#CustomerId').trigger("chosen:updated");
                       }

                         $('#ApartmentId').empty(); //remove all child nodes
                         $('#ApartmentId').append(options);
                        $('#ApartmentId').trigger("chosen:updated");


            }
                }
            })
        });

        $("#ParentOrderId").on("change", function () {
             var data = {
                'OrderId':  $("#ParentOrderId").val(),
            };
             console.log(data);

            $.ajax({
                url: "/Order/GetFollowUpOrderDetail",
                type: "POST",
                dataType: "json",
                data: data,
                success: function (response) {
                        if (response) {
                            debugger;
                            $("#ItemId").val(response.ItemId);
                            $("#PerUnitPrice").val(response.PerUnitPrice);
                            $("#Quantity").val(response.Quantity);
                            $("#TotalPrice").val(response.TotalPrice);
                            $("#Description").val(response.Description);
                            $("#AssigneeId").val(response.AssigneeId);
                            $("#TotalAmount").val(response.TotalAmount);
                            $("#CustomerId").val(response.CustomerId);
                             $('#ShipId').html('');
                var options = '';
                options += '<option value="">Select Ship Address</option>';
                for (var i = 0; i < response.CustomerShipingAddressList.length; i++) {
                    options += '<option value="' + response.CustomerShipingAddressList[i]['ShipId'] + '">' + response.CustomerShipingAddressList[i]['Address'] + '</option>';
                }
                            $('#ShipId').append(options);
                            $("#ShipId").val(response.ShipId);
                             if ($("#ShipId").val()) {
                $("#ApartmentIdPenal").show();
            } else {
                $("#ApartmentIdPenal").hide();
                            }

                             if ($("#CustomerId").val()) {
                $(".btnAddShipping").show();
            } else {
                $(".btnAddShipping").hide();
            }

                  $('#ApartmentId').html('');
                var options = '';
                //options += '<option value="">Select Apartment Address</option>';
                for (var i = 0; i < response.ApartmentList.length; i++) {
                    options += '<option value="' + response.ApartmentList[i]['ApartmentId'] + '">' + response.ApartmentList[i]['ApartmentNo'] + '</option>';
                }


                         $('#ApartmentId').empty(); //remove all child nodes
                         $('#ApartmentId').append(options);
                         $('#ApartmentId').trigger("chosen:updated");


                }

                }
            })
        });

        $("#ReOccurence").on("change", function () {

            if ($("#ReOccurence").val()=="Yes") {
                $("#reOccurencePanel").show();
            }
            else {
                $("#reOccurencePanel").hide();
            }

        });

        $("#ReOccurenceCycle").on("change", function () {

            if ($("#ReOccurenceCycle").val()=="WeekDay") {
                $("#weekdayPanel").show();
            }
            else {
                 $("#weekdayPanel").hide();
            }

        });

        function checkNonWorkingDay() {

            debugger;

            if ($("#ReOccurence").val() == "Yes") {
               var reoccurrenceFromDate = $("#ReOccurenceStartDate").val();
               var reoccurrenceDateTo = $("#ReOccurenceEndDate").val();
               var reOccurrenceFrequency = $("#ReOccurenceFrequency").val();
                var reOccurenceCycle = $("#ReOccurenceCycle").val();
                var reOccurenceWeekday = $("#ReOccurenceWeekday").val();





               if (((reoccurrenceFromDate) && (!reoccurrenceDateTo)) || ((!reoccurrenceFromDate) && (reoccurrenceDateTo))) {
                   swal("Please select both reoccurrence dates", "", "error");
                   return false;
                }

               if ((reoccurrenceFromDate) && (reoccurrenceDateTo)) {
                     if (( new moment(reoccurrenceFromDate)  > new moment(reoccurrenceDateTo))) {
                        swal("Reoccurrence From date should be less or equal to Reoccurrence To date", "", "error");
                        return false;
                    }
                }

                if (!reOccurrenceFrequency) {
                      swal("Please enter in  Re-Occurence In field", "", "error");
                        return false;
                }

                 if (!reOccurenceCycle) {
                         swal("Please select Re-Occurence field", "", "error");
                        return false;
                }

                if (reOccurenceCycle=="WeekDay") {
                     if (!reOccurenceWeekday) {
                         swal("Please select weekday", "", "error");
                        return false;
                }
                }
            }

              var count = 0;
             $("#itemPanel .ItemId").each(function (index, item) {

                 if (!$(this).val()) {
                     count++;
                 }
             });

            if (count>0) {
                 swal("Please select item in item detail", "", "error");
                   return false;
            }

             $("#itemPanel .Quantity").each(function (index, item) {

                 if (!$(this).val()) {
                     count++;
                 }
                 else if ($(this).val().toString()=="0") {
                     count++;
                 }
             });

            if (count>0) {
                 swal("Please select quantity in item detail", "", "error");
                   return false;
            }

            if (!$("#ShipStartDate").val()) {
                $("#mainSubmit").trigger('click');
                return;
            }



             var data = {
                'date': $("#ShipStartDate").val(),

            };

            $.ajax({
                url: "/Order/CheckNonworkingDay",
                type: "POST",
                dataType: "json",
                data: data,
                success: function (response) {
                    console.log(response);
                    if (response.Status=="1") {
                        $("#mainSubmit").trigger('click');
                    }
                    else {
                          swal({
                title: "Ship Date is a non working day. Do you want to continue?",
                type: "warning",
                showCancelButton: true,
                cancelButtonText: "No",
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes",
                closeOnConfirm: false
            },
                function (isConfirm) {
                    if (!isConfirm)
                        return;

                 $("#mainSubmit").trigger('click');

                });
                    }
                }
            })
        }


    </script>

    <script type="text/javascript">

        $("#CompanyName").on("change", function () {
            if ($("#CompanyName").val()) {
                $("#CompanyType").val("Business");
                $("#CompanyType").attr("readonly", "readonly");
            }
            else {
                $("#CompanyType").removeAttr("readonly");
            }
        });

        function addNewShipping() {

            var data = {
                'CustomerId': $("#CustomerId").val(),
                FirstName: $("#CustomerShippingDetail_FirstName").val(),
                MiddleName: $("#CustomerShippingDetail_MiddleName").val(),
                LastName: $("#CustomerShippingDetail_LastName").val(),
                Email: $("#CustomerShippingDetail_Email").val(),
                Phone: $("#CustomerShippingDetail_Phone").val(),
                StateId: $("#CustomerShippingDetail_StateId").val(),
                CityId: $("#CustomerShippingDetail_CityId").val(),
                Address: $("#CustomerShippingDetail_Address").val(),
            };

            $.ajax({
                url: "/Order/AddShipping",
                type: "POST",
                dataType: "json",
                data: data,
                success: function (response) {
                    console.log(response);
                    if (response.Status) {
                        $("#CustomerId").trigger("change");
                        setTimeout(function () { $("#ShipId").val(response.Status); }, 500);
                        $("#btnCloseShipping").trigger('click');
                    }
                }
            })
        }

    </script>

    <script type="text/javascript">

        function addItems(i) {
            debugger;
            var index = $(".btnAdd").length;

            $.ajax({
                url: "/Order/GetOrderDetail/" + index,

                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                success: function (response) {
                    $("#itemPanel").append(response);
                    $(".btnAdd").each(function (ind, ele) {
                        if (ind != index) {
                            $(ele).hide();
                        }
                    });

                    $(".btnDelete").each(function (ind, ele) {
                        if (ind != (index - 1)) {
                            $(ele).hide();
                        }
                    });


                    $("#itemPanel .form-control").each(function (ind, ele) {
                        if ($(ele).attr('name1')) {
                            $(ele).attr('name', $(ele).attr('name1'));
                        }

                    });

                    bindEvent();

                }
            })
        };


        function bindEvent() {
            $(".ItemId").on("change", function () {
                debugger;
                if ($(this).val()) {
                    var price = getItemPrice($(this).val());
                    var description = getItemDescription($(this).val());
                    debugger;
                    $(this).parent().parent().find(".PerUnitPrice").val(price);
                    $(this).parent().parent().find(".Description").val(description);
                    if ($(this).parent().parent().find(".Quantity").val()) {
                        var quantity = Number($(this).parent().parent().find(".Quantity").val());
                        var perUnitPrice = Number($(this).parent().parent().find(".PerUnitPrice").val());
                        $(this).parent().parent().find(".TotalPrice").val(quantity * perUnitPrice);
                        if ($("#TotalAmount").val()) {
                            // $("#TotalAmount").val(Number($("#TotalAmount").val())+ quantity * perUnitPrice);
                        }

                    }
                    else {
                        $(this).parent().parent().find(".TotalPrice").val('');
                        // $("#TotalAmount").val('');
                    }
                }
                else {
                    $(this).parent().parent().find(".PerUnitPrice").val('');
                    $(this).parent().parent().find(".Description").val('');
                }

                setTotalAmount();

            });

            $(".Quantity").on("change", function () {
                console.log('event');
                if ($(this).val()) {
                    var quantity = Number($(this).val());
                    var perUnitPrice = Number($(this).parent().parent().find(".PerUnitPrice").val());
                    $(this).parent().parent().find(".TotalPrice").val(quantity * perUnitPrice);
                    //$("#TotalAmount").val(quantity * perUnitPrice);
                }
                else {
                    $(this).parent().parent().find(".TotalPrice").val('');

                }

                setTotalAmount();
            });
        }

        function deleteItem(index) {
            debugger;
            $(event.currentTarget).parent().parent().parent().remove();
            $(".btnAdd").each(function (ind, ele) {
                if (ind == (index - 1)) {
                    $(ele).show();
                }
            });
            if (index > 1) {
                $(".btnDelete").each(function (ind, ele) {
                    if (ind == (index - 2)) {
                        $(ele).show();
                    }
                });

            }
        }

    </script>

}