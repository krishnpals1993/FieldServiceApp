@using Microsoft.Extensions.Options;
@using Newtonsoft.Json;
@model FieldServiceApp.Models.ServiceFormViewModel
@inject IOptions<Appsettings> Settings
@{

    var serviceTypeList = new List<String>();
    serviceTypeList.Add("Yes");
    serviceTypeList.Add("No");
    ViewData["Title"] = "Service Form";
}
<div role="main" class="page-content container container-plus">
    <div class="card bcard mt-2 mt-lg-3">
        <div class="card-header">
            <h3 class="card-title text-125">
                @ViewData["Title"]
            </h3>
        </div>

        <div class="card-body px-3 pb-1">
            <form class="mt-lg-3" autocomplete="off" enctype="multipart/form-data"
                  novalidate action="@Settings.Value.WebBaseURL/Service/Work" method="post">

                <div class="form-group row">
                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                        <label for="id-form-field-1" class="mb-0">
                            Customer
                        </label>
                    </div>

                    <div class="col-sm-3">
                        @Html.DropDownListFor(model => model.OrderId, new SelectList(Model.OrderList.Select(x => new { Value = x.OrderId, Text = x.CustomerName }), "Value", "Text"), "Select Customer", new { @class = "form-control", @placeholder = "Select Company" })

                        <span class="btn btn-link" id="btnOrder" onclick="getOrderDetail()"> View Order Detail </span>
                        
                        <span asp-validation-for="OrderId" class="text-danger"></span>
                    </div>

                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                        <label for="id-form-field-1" class="mb-0">
                            Ship Address
                        </label>
                    </div>

                    <div class="col-sm-3">
                        @Html.TextBoxFor(m => m.ShipAddress,
                           new { @placeholder = "Ship Address", @readonly = "readonly", @class = "form-control" })

                    </div>



                </div>

                <div class="form-group row">


                    <div class="col-sm-2 col-form-label text-sm-right pr-0 apartmentPanel">
                        <label for="id-form-field-1" class="mb-0">
                            Apartment
                        </label>
                    </div>

                    <div class="col-sm-3 apartmentPanel">
                        @Html.DropDownListFor(model => model.ApartmentId, 
                       new SelectList(Model.ApartmentList.Select(x => new { Value = x.ApartmentId, Text = x.ApartmentNo }), "Value", "Text"), "Select Apartment", new { @class = "form-control", @placeholder = "Select Company" })

                        <span asp-validation-for="OrderId" class="text-danger"></span>
                    </div>

                    <div class="col-sm-2 col-form-label text-sm-right pr-0">
                        <label for="id-form-field-1" class="mb-0">
                            Date of service
                        </label>
                    </div>

                    <div class="col-sm-3">
                        <div class="input-group date">

                            @Html.TextBoxFor(m => m.DateOfService,
                            new { id = "id-date-1", @placeholder = "Date of service", @class = "form-control" })

                            <div class="input-group-addon input-group-append">
                                <div class="input-group-text">
                                    <i class="far fa-clock"></i>
                                </div>
                            </div>

                        </div>
                        <span asp-validation-for="DateOfService" class="text-danger"></span>
                    </div>



                </div>


                @*<div class="form-group row">
                        <div class="col-sm-2 col-form-label text-sm-right pr-0">
                            <label for="id-form-field-1" class="mb-0">
                                Signature
                            </label>
                        </div>

                        <div class="col-sm-3">
                            <input type="file" name="file" class="form-control" placeholder="Signature" />

                        </div>
                    </div>*@

                <div id="itemPanel" style="display:none">

                    <h3 class="card-title text-125">
                        Item detail
                    </h3>
                    <hr />

                    <div class="form-group row">

                        <div class="col-sm-1 col-form-label text-sm-right pr-0">
                            <label for="id-form-field-1" class="mb-0">
                                Category
                            </label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DropDownListFor(model => model.ServiceType, new SelectList(Model.ItemCategoryList.Select(x => new { Value = x.CategoryId, Text = x.CategoryName }), "Value", "Text"), "Select Item Category", new { @class = "form-control", @placeholder = "Select Item" })
                            <span asp-validation-for="ServiceType" class="text-danger"></span>
                        </div>


                        <div class="col-sm-1 col-form-label text-sm-right pr-0">
                            <label for="id-form-field-1" class="mb-0">
                                Item
                            </label>
                        </div>
                        <div class="col-sm-2">
                            @Html.DropDownListFor(model => model.ItemId, new SelectList(Model.ItemList.Select(x => new { Value = x.ItemId, Text = x.ItemCd }), "Value", "Text"), "Select Item", new { @class = "form-control", @placeholder = "Select Item" })
                            <span asp-validation-for="ItemId" class="text-danger"></span>
                        </div>

                        <div class="col-sm-1 col-form-label text-sm-right pr-0">
                            <label for="id-form-field-1" class="mb-0">
                                Quantity
                            </label>
                        </div>
                        <div class="col-sm-2">
                            @Html.TextBoxFor(m => m.Quantity,
                             new { @placeholder = "Quantity", @class = "form-control" })
                            <span asp-validation-for="Quantity" class="text-danger"></span>
                        </div>
                        <div class="col-sm-1 col-form-label text-sm-right pr-0">
                            <label for="id-form-field-1" class="mb-0">
                                Locations
                            </label>
                        </div>

                        <div class="col-sm-2">
                            @Html.TextBoxFor(m => m.Locations,
                             new { @placeholder = "Locations", @class = "form-control", @maxlength = "100" })
                        </div>
                    </div>

                </div>
                <hr />

                <div class="row" id="existingServiceLog">

                </div>



                <div class="mt-5 border-t-1 brc-secondary-l2 py-35 mx-n25">
                    <div class="offset-md-2 col-md-9 text-nowrap">
                        <button class="btn btn-info btn-bold px-4" type="submit">
                            <i class="fa fa-check mr-1"></i>
                            Submit
                        </button>

                        <a href="~/Service/List" class="btn btn-outline-lightgrey btn-bold ml-2 px-4" type="reset">
                            <i class="fa fa-undo mr-1"></i>
                            Cancel
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

</div>

<div id="exampleModal">

</div>



@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib/bootstrap-datepicker/bootstrap-datetimepicker.css" />
        <link rel="stylesheet" href="~/lib/bootstrap-datepicker/tiny-date-picker.css" />
        <link rel="stylesheet" href="~/lib/bootstrap-datepicker/date-range-picker.css" />
    </environment>
    <style>
        hr {
            /*margin-bottom: 2rem !important;*/
        }
    </style>
}

@section scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <environment names="Development,Staging,Production">
        <script src="~/lib/moment/moment.js"></script>
        <script src="~/lib/bootstrap-datepicker/bootstrap-datetimepicker.js"></script>
        <script src="~/lib/bootstrap-datepicker/date-range-picker.js"></script>
        <script src="~/pages/form-basic/@@page-script.js"></script>
    </environment>

    <script type="text/javascript">
        // Restricts input for each element in the set of matched elements to the given inputFilter.
        (function ($) {
            $.fn.inputFilter = function (inputFilter) {
                return this.on("input keydown keyup mousedown mouseup select contextmenu drop", function () {
                    if (inputFilter(this.value)) {
                        this.oldValue = this.value;
                        this.oldSelectionStart = this.selectionStart;
                        this.oldSelectionEnd = this.selectionEnd;
                    } else if (this.hasOwnProperty("oldValue")) {
                        this.value = this.oldValue;
                        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                    } else {
                        this.value = "";
                    }
                });
            };
        }(jQuery));
    </script>

    <script type="text/javascript">
        $(document).ready(function () {

            $("#Quantity").inputFilter(function(value) {
                 return /^-?\d*[.,]?\d*$/.test(value); });

            $("#Locations").val('');
            $("#Quantity").val('');

            if ( $("#OrderId").val()) {
                $("#btnOrder").show();
            }
            else {
                $("#btnOrder").hide();
            }


            if ($("#OrderId").val()) {
                $("#OrderId").trigger('change');
            }

            if ($("#ServiceType").val()) {
                $("#ServiceType").trigger('change');
            }

            var TinyDatePicker = DateRangePicker.TinyDatePicker;
            TinyDatePicker('#id-date-1', {
                mode: 'dp-below',
                date: new Date()
            });

            $("#id-date-1").val(new moment().format("MM/DD/YYYY"));



        var SuccessMessage = '@ViewBag.SuccessMessage';
        var ErrorMessage = '@ViewBag.ErrorMessage';
        if (SuccessMessage) {
            swal(SuccessMessage, "", "success");

        }
        if (ErrorMessage) {
            swal(ErrorMessage, "", "error");
        }

      });

        function getItemPrice(itemId) {
            var price = 0;
            for (var i = 0; i <  window.itemList.length; i++) {
                if (window.itemList[i]["ItemId"].toString()== itemId) {
                    price = window.itemList[i]["ItemPrice"];
                    i = window.itemList.length;
                    break;
                }
            }
            return price;
        }

        $("#OrderId").on("change", function () {
            $("#ShipId").html('');
             var data = {
                'OrderId':  $("#OrderId").val(),
            };
            console.log(data);
            $.ajax({
                url: "/Service/GetCustomerShippingAddress",
                type: "POST",
                dataType: "json",
                data: data,
                success: function (response) {
                    console.log(response);
                    $('#ShipAddress').val('');
                   {
                        $('#ShipAddress').val(response.Address);
                         $('#ApartmentId').html('');
                var options = '';
                options += '<option value="">Select Apartment</option>';
               
                
                        if (response.ApartmentList.length>0) {
                            $(".apartmentPanel").show();
                             for (var i = 0; i < response.ApartmentList.length; i++) {
                    options += '<option value="' + response.ApartmentList[i]['ApartmentId'] + '">' + response.ApartmentList[i]['ApartmentNo'] + '</option>';
                }
                        }
                        else {
                            $(".apartmentPanel").hide();
                        }

                        $('#ApartmentId').append(options);


                   }
                }
            });

            if ($("#OrderId").val()) {
                $("#itemPanel").show();
                $("#btnOrder").show();
                resetItems();
                bindServiceFormLogs();
            }
            else {
                $("#itemPanel").hide();
                $("#btnOrder").hide();
                $("#existingServiceLog").html('');
                resetItems();
            }


        });

        function resetItems() {
            $("#Quantity").val('');
            $("#ItemId").val('');
        }

        $("#ServiceType").on("change", function () {
            $("#ItemId").html('');
             var data = {
                 'CategoryId': $("#ServiceType").val(),
                 'OrderId': $("#OrderId").val()
            };
            console.log(data);
            $.ajax({
                url: "/Service/GetItemByServiceType",
                type: "POST",
                dataType: "json",
                data: data,
                success: function (response) {
                    $('#ItemId').html('');
                    $('#ItemId').append('<option value="">Select Item</option>');

                    if (response.length > 0) {

                var options = '';
                for (var i = 0; i < response.length; i++) {
                    options += '<option value="' + response[i]['ItemId'] + '">' + response[i]['ItemCd'] + '</option>';
                }
                $('#ItemId').append(options);
            }
                }
            })
        });

        function getOrderDetail() {
              $.ajax({
                url: "/Service/GetOrderPopup/" + $("#OrderId").val(),
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                success: function (response) {
                    var modal = response;
                    $("#exampleModal").html(modal);
                }
            });
        }

        function bindServiceFormLogs() {
             $.ajax({
                url: "/Service/ServiceFormLog/" + $("#OrderId").val(),
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                success: function (response) {
                    var modal = response;
                    $("#existingServiceLog").html(modal);
                }
            });
        }

        function closeModel() {
          $("#exampleModal").html('');
        }

    </script>
}